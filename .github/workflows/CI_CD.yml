# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: OnlinePlanner_Ci_CD

on:
  push:
    branches: [ main, delvelop ]

jobs:
  CI-CD:
    runs-on: ubuntu-latest

    env:
      OP_URL: ${{ secrets.OP_URL }}
      OP_USERNAME: ${{ secrets.OP_USERNAME }}
      OP_PASSWORD: ${{ secrets.OP_PASSWORD }}
      OP_MAIL_USERNAME: ${{ secrets.OP_MAIL_USERNAME }}
      OP_MAIL_PASSWORD: ${{ secrets.OP_MAIL_PASSWORD }}
      OP_JWT_ACCESS: ${{ secrets.OP_JWT_ACCESS }}
      OP_JWT_REFRESH: ${{ secrets.OP_JWT_REFRESH }}
      OP_JWT_KEY: ${{ secrets.OP_JWT_KEY }}
      OP_FCM_DIR: ${{ secrets.OP_FCM_DIR }}
    
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build --info
        
      - name: Build Docker Image
        run: docker build -t seogunhee4/op_server:latest .
        
      - name: Publish To Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: seogunhee4/op_server:tagname
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          password:  ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            cd OnlinePlanner_Server/
            git fetch --all
            git reset --hard origin/main
            git pull origin main
            cp /home/ubuntu/op_fcm/online-planner-c5272-firebase-adminsdk-nqcf6-af929a2855.json /home/ubuntu/OnlinePlanner_Server/src/main/java/online/planner/online_planner/util/
            gradle build
            docker rm -f op_server
            docker build --tag op_server .
            docker run -it --env-file /home/ubuntu/.env -d -p 7070:7070 --name op_server op_server


